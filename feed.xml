<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>OpenMessaging</title>
    <description>OpenMessaging is a cloud-oriented and vendor-neutral open standard for messaging, providing industry guidelines for areas such as finance, e-commerce, IoT and Big Data and oriented toward furthering messaging and streaming applications across heterogeneous systems and platforms.
</description>
    <link>/</link>
    <atom:link href="/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Tue, 30 Nov 2021 01:11:56 +0000</pubDate>
    <lastBuildDate>Tue, 30 Nov 2021 01:11:56 +0000</lastBuildDate>
    <generator>Jekyll v3.7.2</generator>
    
      <item>
        <title>21Vianet Enterprise Cloud, TalkingData, Qiniu Cloud, 360 Finance, Qingyuan Cloud and BingoCloud join the OpenMessaging Project</title>
        <description>&lt;p&gt;We are excited to announce 6 new members to the OpenMessaging project: 21Vianet Enterprise Cloud, TalkingData, Qiniu Cloud, 360 Finance, Qingyuan Cloud and BingoCloud. With the new members, OpenMessaging community has 22 corporate members now.&lt;/p&gt;

&lt;p&gt;OpenMessaging is a standards project for messaging and streaming technology. Messaging and Streaming products have been widely used in modern architecture and data processing, for decoupling, queuing, buffering, ordering, replicating, etc. But when data transfers across different messaging and streaming platforms, compatibility problems arise, which always means much additional work. The OpenMessaging community looks to eliminate these challenges through creating a global, cloud-oriented, vendor-neutral industry standard for distributed messaging.&lt;/p&gt;

&lt;p&gt;21Vianet Enterprise Cloud, operated by 21Vianet Group, provides Private Cloud service and Hybrid Cloud service. 21Vianet Group, Inc. is a leading carrier-neutral Internet data center services provider in China. 21Vianet provides hosting and related services, cloud services, and business VPN services, improving the reliability. 21Vianet operates in more than 30 cities throughout China, servicing a diversified and loyal base of nearly 5,000 hosting enterprise customers that span numerous industries ranging from Internet companies to government entities and blue-chip enterprises to small- to mid-sized enterprises. “We are the team focusing on cloud computing solutions. We have always been involved in open source. ” said Yanfeng Ma, the lead of cloud computing solutions team, “We hope to become a member of OpenMessaging project to share new thing for my team and will promote the standardization and future development of OpenMessaging from our effort.”&lt;/p&gt;

&lt;p&gt;Founded in 2011, TalkingData is China’s leading third-party data intelligence solution provider. With SmartDP as the core of its data intelligence application ecosystem, TalkingData empowers enterprises and helps them achieve a data-driven digital transformation. “As we started to use different messaging and streaming products, we noticed that these solutions were not cloud native and language agnostics, creating major problems for those that are looking to implement digital transformation” said Ji Ma, the R&amp;amp;D VP in TalkingData, “We are glad to help with the development of the technical standards like OpenMessaging.”&lt;/p&gt;

&lt;p&gt;Qiniu Cloud is affiliated to Shanghai Qiniu Information Technology Company, LLC. Qiniu, the leading enterprise cloud service supplier in China, specializes in the research, development and operation of cloud computing service focusing on data management. We have launched products for rich media, including object storage, integrated CDN accelerating, container-based computing cloud, big data platform and AI platform, and offered one-stop solution to video cloud as well. Qiniu has so far led the domestic cloud computing industry and supplied services to more than 700,000 enterprises in order to help enterprises quickly get their own clouds and create larger business value.  “On Qiniu Container Engine platform, we have built container-based message-queueing service with RabbitMQ, running on Kubernetes with free maintenance. The integration with our MQ service and other open source solutions such as Apache RocketMQ and Apache Kafka is in the works, which brings us expensive learning and maintenance cost for there is too many different alternatives offered in MQ area. “ said Peiyu Lin, who is responsible for architecting and developing for message queue service in Qiniu applications, “The roadmap given by OpenMessaging is what we exactly expected. We hope to cooperate with the OpenMessaging community to benefit both parties.”&lt;/p&gt;

&lt;p&gt;360 Finance, Inc. is a leading digital consumer finance platform and the finance partner of the 360 Group connecting over one billion accumulated mobile devices. The Company provides tailored online consumer finance products to prime, underserved borrowers funded primarily by its funding partners. transaction lifecycle from credit application through settlement. “360 Finance’s core product is an affordable, unsecured, digital line of credit which borrowers typically utilize for consumption spending and often as a supplement to credit card debt. We currently use a lot of open source technologies from various communities, including message middleware.”said Weiwei Xiao, the lead of Middleware team of 360 Finance, “We hope to participate in community communication and construction, and grow with the OpenMessaging.”&lt;/p&gt;

&lt;p&gt;Qingyuan Tech. Corp. is a leading PaaS vendor based in Beijing. CyberSquare (TM) is new generation platform of QingYuan Tech. Corpornation, which creatively integrates the open source orchestration- Kubernetes into Openstack system with latest version, and publishes the Private Cloud Data Center Operating System providing VM and container composite service and cross-platforms ability. “During the R&amp;amp;D of QingYuan cloud platform, QingYuan needs to cope with high availability and high concurrency issue. MQ is one of the key components in QingYuan’s platform to resolve those problems.” said Aixion Li, the director of MQ team at Qingyuan, “QingYuan has rich practices in MQ, such as RocketMQ, Kafka, Rabbit MQ and NATS.  Also QingYuan technique team has some in-depth thinking for MQ. So we would like to join OpenMessaging alliance in order to communicate and make some contribution to alliance.”&lt;/p&gt;

&lt;p&gt;Founded in 2003, Bingosoft Co., Ltd. opened its business by customizing large-scale application software along with delivering software products, solutions and consulting services. In 2006, we were appointed to host one of the Microsoft Technology Centers (later Microsoft Innovation Center) based on a memo between Microsoft and Chinese government. Benefit from in-depth business and long-term cooperative relationship with customers from multiple large industries like telecom, great partners like Microsoft and IBM, BingoSoft has been accumulating rich experiences and best practices of industrial IT solutions. “More and more enterprise applications are based on message-driven, micro-service application master data synchronization also requires a message mechanism to achieve lower latency.” said Qiang Li, development lead of PaaS, DevOps product at Bingosoft, “We are looking forward to apply our experience to message-driven architecture”&lt;/p&gt;

&lt;p&gt;As an effort to standardize distributed messaging and streaming systems, OpenMessaging is committed to embracing an open, collaborative, intelligent, and cloud-native era with all its community members. To learn more about OpenMessaging and to join the OpenMessaging community, visit https://openmessaging.cloud.&lt;/p&gt;
</description>
        <pubDate>Fri, 08 Mar 2019 00:00:00 +0000</pubDate>
        <link>/news/2019/03/08/21vianet-talkingdata-qiniucloud-360-finance-qingyuan-cloud-and-bingocloud-join-the-openmessaging-project/</link>
        <guid isPermaLink="true">/news/2019/03/08/21vianet-talkingdata-qiniucloud-360-finance-qingyuan-cloud-and-bingocloud-join-the-openmessaging-project/</guid>
        
        
        <category>news</category>
        
      </item>
    
      <item>
        <title>JD Cloud, Iflytek and VIPKid join the OpenMessaging Project</title>
        <description>&lt;p&gt;Today, the OpenMessaging Project — a collaborative project focusing on creating a vendor-neutral open standard for distributed messaging — announced three new members JD Cloud, Iflytek and VIPKid. With the new members, OpenMessaging community has 16 corporate members now.&lt;/p&gt;

&lt;p&gt;The acceleration of microservice-based and cloud-based applications has put a growing focus on how data is connected to services, applications, and users. This focus has led to a number of new innovations and new products that support messaging and queuing needs. The goal of the OpenMessaging Project is to build out an industry standard, cloud oriented, and vendor neutral open standard for distributed messaging.&lt;/p&gt;

&lt;p&gt;JD Cloud is JD.com’s full-service cloud computing platform and integrated cloud service provider. It houses the world’s leading technologies and a wealth of cloud computing solutions, offering full stack services encompassing IaaS, PaaS and SaaS. It also provides full spectrum services from IDC and cloud computing services to integrated offerings and services spanning several industries. Covering all 4 Public, Private, Hybrid and Proprietary Cloud scenarios, JD Cloud delivers a comprehensive range of cloud computing services including infrastructure building, strategic consulting, and business platforms development and operation. 
“The JD Cloud Message Queue’s goal just coincides with OpenMassaging’s, which is to develop heterogeneous messaging applications across all major platforms and operating systems, ” said Jiyuan Tian, the leader of Messaging Middleware at the JD Cloud Product Research &amp;amp; Develope Department. “If more and more message queue products join OpenMessaging and follow its message protocol, it will provide the convenience for users to shift to different message queue products and platforms with fewer code changes. It also helps users shift to JD Cloud Message Queue from other platforms and products.”&lt;/p&gt;

&lt;p&gt;Iflytek Co.,Ltd., founded in 1999, represents the international advanced level in speech synthesis, speech recognition, spoken language evaluation, language translation, voice pattern recognition, face recognition, natural language processing and other intelligent speech and artificial intelligence core technologies.
“Our company uses a variety of message queues, which is expensive to use. We hope to have a set of unified standards,” said Zhijie Luo, who is responsible for message queue service in cloud computing research institute of Iflytek. “The goal of the OpenMessaging project is just what we seek from the messaging industry.”&lt;/p&gt;

&lt;p&gt;As an effort to standardize distributed messaging and streaming systems, OpenMessaging is committed to embracing an open, collaborative, intelligent and cloud-native era with all its community members.&lt;/p&gt;

&lt;p&gt;VIPKid connects teachers in the US and Canada with children throughout China and 63 countries around the world for real-time English immersion learning online. VIPKid now serves a community of well over 500,000 students and over 60,000 teachers in the US and Canada. Recently, VIPKid announced plans to offer services to children in 100 countries in the next three years.&lt;/p&gt;

&lt;p&gt;“Joining OpenMessaging will begin the implementation of the OpenMessaging standard for the VIPKID multi-cloud and multi-message queue service. It can also help OpenMessaging better develop and better serve online education and achieve a win-win scenario,” said Francis Lee, the lead of the message queue service in VIPKID. “VIPKID’s technical strength has risen with its rapid development. It aims to contribute back to and lend more effort to the open source community. ”&lt;/p&gt;

&lt;p&gt;We are glad to see the community of OpenMessaging keeps growing as more and more companies recognize the great value of a vendor neutral open messaging standard for the cloud-native era.&lt;/p&gt;

</description>
        <pubDate>Mon, 11 Feb 2019 00:00:00 +0000</pubDate>
        <link>/news/2019/02/11/jd-cloud-iflytek-and-vipkid-join-the-openmessaging-project/</link>
        <guid isPermaLink="true">/news/2019/02/11/jd-cloud-iflytek-and-vipkid-join-the-openmessaging-project/</guid>
        
        
        <category>news</category>
        
      </item>
    
      <item>
        <title>Yahoo! JAPAN and EMQ X Join the OpenMessaging Project</title>
        <description>&lt;p&gt;We are excited to announce two new members to the OpenMessaging project: Yahoo! JAPAN, one of the largest portal sites in Japan, and EMQ X, one of the most popular MQTT message middleware vendors. Yahoo! JAPAN and EMQ X join Alibaba, JD.com, China Mobile Cloud, Qing Cloud, and other community members to form a standards community with 13 corporation members.&lt;/p&gt;

&lt;p&gt;OpenMessaging is a standards project for messaging and streaming technology. Messaging and Streaming products have been widely used in modern architecture and data processing, for decoupling, queuing, buffering, ordering, replicating, etc. But when data transfers across different messaging and streaming platforms, compatibility problems arise, which always means much additional work. The OpenMessaging community looks to eliminate these challenges through creating a global, cloud-oriented, vendor-neutral industry standard for distributed messaging.&lt;/p&gt;

&lt;p&gt;Yahoo! JAPAN, operated by Yahoo Japan Corporation, is one of the largest portal site in Japan. Under the mission to be a “Problem-Solving Engine,” Yahoo Japan Corporation is committed in solving the problems of the people and society leveraging the power of information technologies. The company uses various messaging systems (e.g., Apache Pulsar, Apache Kafka and RabbitMQ) to create its services and is creating a centralized pub-sub messaging platform that deals with a vast number of service/application traffics.&lt;/p&gt;

&lt;p&gt;“Yahoo Japan Corporation uses various messaging systems (e.g., Apache Pulsar, Apache Kafka and RabbitMQ) to create its services. However, differences in messaging interfaces make the whole system complicated and lead to extra costs in implementation and in studying each system. Thus, we need a standardized and unified interface that can be easily implemented and easily collaborated with other services.” said Nozomi Kurihara, the Manager of the Messaging Platform team in Yahoo Japan Corporation. “We think OpenMessaging is the key in achieving our “multi big data” system in which data can be cross-used among different services/applications we provide.”&lt;/p&gt;

&lt;p&gt;Originated from a GitHub open source IoT project starting from 2012, EMQ X has become one of the most popular MQTT message middleware in community. EMQ X is based on the Erlang/OTP platform, which can support 10 million concurrent MQTT connections with high throughput and low latency. EMQ X now has 500k downloads, and 5000+ customer users in 50 countries and regions around the world, such as China, United States, Australia, British, and India.&lt;/p&gt;

&lt;p&gt;“Our customers cover different industries, such as financial, IoV, telecom, smart home. We also partnered with Fortune 500 companies, such as HPE, Ericsson, VMware, to provide professional IoT solutions to customers around the world. OpenMessaging is vendor-neutral and language-independent, provides industry guidelines for areas of finance, e-commerce, IoT and Big Data, and aimed to develop messaging and streaming applications across heterogeneous systems and platforms.” said Feng Lee, Co-founder of EMQ X. “We’re glad to join OpenMessaging.”&lt;/p&gt;

&lt;p&gt;As an effort to standardize distributed messaging and streaming systems, OpenMessaging is committed to embracing an open, collaborative, intelligent, and cloud-native era with all its community members.&lt;/p&gt;
</description>
        <pubDate>Thu, 17 Jan 2019 00:00:00 +0000</pubDate>
        <link>/news/2019/01/17/yahoo-japan-and-emq-x-join-the-openmessaging-project/</link>
        <guid isPermaLink="true">/news/2019/01/17/yahoo-japan-and-emq-x-join-the-openmessaging-project/</guid>
        
        
        <category>news</category>
        
      </item>
    
      <item>
        <title>JingDong (JD.com), China Mobile Cloud, QingCloud, and Whale Cloud Join the OpenMessaging Project</title>
        <description>&lt;p&gt;Today, the OpenMessaging Project — a collaborative project focused on creating a vendor-neutral open standard for distributed messaging — announced four new members JD.com, China Mobile Cloud, QingCloud, and Whale Cloud. Current members include Alibaba, DataPipeline, Di Di, Streamlio, WeBank, and Yahoo!.&lt;/p&gt;

&lt;p&gt;The acceleration of microservice-based and cloud-based applications has put a growing focus on how data is connected to services, applications, and users. This focus has led to a number of new innovations and new products that support messaging and queueing needs. It has also contributed to increased demands on messaging and queuing solutions, making performance and scalability critical to success, and the need for an open standardization a must.&lt;/p&gt;

&lt;p&gt;The goal of the OpenMessaging Project is to build out an industry standard, cloud oriented, and vendor neutral open standard for distributed messaging. More on this project and how to participate here: http://openmessaging.cloud&lt;/p&gt;

&lt;p&gt;New Member Supporting Quotes:&lt;/p&gt;

&lt;p&gt;“At China Mobile and CMsoft, we have built a MQ proxy system of Apache RocketMQ  to provide a set of producer APIs and consumer APIs. The redundancy of having to hide the differences among the MQs takes so much time and energy out of our team. Given our knowledge in this field, we understand first hand the importance of a messaging communication standard. Having a vendor-neutral and language-independent MQ standard guideline is a big win for many applications. We believe this standard can help and promote the MQ technology that we rely on.” – Henry Hu, Architect at China Mobile and CMsoft.&lt;/p&gt;

&lt;p&gt;“As a cloud provider, we offer various messaging services including Apache Kafka, RabbitMQ, and RocketMQ to our customers. More and more people keep asking us what software to use for their messaging requirements as the market is saturated with various open source solutions. This market saturation causes not only a high learning curve, but also a high maintenance cost. An industry open standard, vendor-neutral and language-independent specification for distributed messaging is increasingly important, especially in a cloud era. We look forward to collaborating with the OpenMessaging project to help drive messaging service towards a unified, open standard interface.” – Ray Zhou, Development Director at QingCloud&lt;/p&gt;

&lt;p&gt;“At the JD Group, JingDong Message Queue (JMQ) has been widely used. However, despite our efforts to be compatible with all kinds of message protocols, we still can’t meet all the requirements. We are planning to open source JMQ, so it can be implemented for OpenMessaging. We see OpenMessaging as a de-facto international open standard for distributed messaging that aims at satisfying the need of modern cloud-native messaging and streaming applications. We sincerely believe that a unified and widely-accepted messaging standard can benefit MQ technology and applications relied on it.” – DeQiang Lin, Messaging Leader at the JingDong Middleware Department&lt;/p&gt;

&lt;p&gt;“Currently, message queuing uses proprietary, closed protocols, restricting the ability for different operating systems or programming languages to interact in a heterogeneous set of environments. At Whale Cloud, in order to make it easy for developers to use messaging and streaming services, we’ve worked to eliminate the differences between the different protocols. Giving us insight and knowledge to know that a vendor-neutral and language-independent open specification is badly needed.” – Zheng Tao, Technical Director of Distributed Messaging and Streaming Data Platform at Whale Cloud&lt;/p&gt;
</description>
        <pubDate>Fri, 05 Oct 2018 00:00:00 +0000</pubDate>
        <link>/news/2018/10/05/jingdong-jd-com-china-mobile-cloud-qing-cloud-and-whale-cloud-join-the-openmessaging-project/</link>
        <guid isPermaLink="true">/news/2018/10/05/jingdong-jd-com-china-mobile-cloud-qing-cloud-and-whale-cloud-join-the-openmessaging-project/</guid>
        
        
        <category>news</category>
        
      </item>
    
      <item>
        <title>WeBank and DataPipeline Join OpenMessaging to Build an Open Standard for Distributed Messaging</title>
        <description>&lt;p&gt;We are excited to announce two new members to the OpenMessaging Project: WeBank,  China’s first privately-owned bank and the first digital-only bank that focuses on microloan borrowers, and DataPipeline, a company that focuses on helping organizations increase data mobility by connecting data, application and device. WeBank and DataPipeline join Alibaba, Streamlio, Didi and Yahoo! in creating a vendor-neutral and open standard for distributed messaging that can be deployed in the cloud, on-premise, and with hybrid use cases.&lt;/p&gt;

&lt;p&gt;The acceleration of microservice-based and cloud-based applications has put a growing focus on how data is connected to services, applications and users. This focus has led to a number of new innovations and new products that support messaging and queueing needs. It has also contributed to increased demands on messaging and queuing solutions, making performance and scalability critical to success.&lt;/p&gt;

&lt;p&gt;The OpenMessaging community looks to eliminate these challenges through:&lt;/p&gt;

&lt;p&gt;-Creating a global, cloud-oriented, vendor-neutral industry standard for distributed messaging   &lt;br /&gt;
-Facilitating a standard benchmark for testing applications   &lt;br /&gt;
-Enabling platform independence   &lt;br /&gt;
-Targeting cloud data streaming and messaging requirements with scalability, flexibility, isolation, and security built-in   &lt;br /&gt;
-Fostering a growing community of contributing developers&lt;/p&gt;

&lt;p&gt;Headquartered in Shenzhen, China, WeBank is China’s first privately-owned bank and first digital-only bank focusing on microloan borrowers and initiated by Linux Foundation Platinum member, Tencent. The company uses different banking architectures, from distributed architecture to open source technologies, and fully utilizes the benefits of messaging by implementing various messaging techniques in different scenarios, such as message exchanges, pub/sub and request/reply models.&lt;/p&gt;

&lt;p&gt;“We’ve built a messaging bus called WeMQ, which is also compatible with other messaging services. These are critical to our business. However, after adding different messaging services, we realized there is a need for a universal, scalable and reliable standard for distributed messaging, in order for us to scale,” said Eason Chen, WeBank Tech Specialist. “We believe OpenMessaging can address our current challenges, and we look forward to contributing to its efforts.”&lt;/p&gt;

&lt;p&gt;As a next-generation integration PaaS technology provider, DataPipeline serves many Fortune 500 customers from financial, retail and manufacture sectors, solving the problem of integrating thousands of data sources and billions of messages in real time with zero effort.&lt;/p&gt;

&lt;p&gt;The team at DataPipeline has experience in building large scale data mobility applications based on open source MQs. When the microservice framework started to gain traction, doing high concurrency service calls, bulk data streaming and joining became huge problems.&lt;/p&gt;

&lt;p&gt;“As we started to adopt a variety of open source MQ solutions (Apache RocketMQ, Apache Kafka, etc.), we began to notice that these solutions were not cloud native and language agnostics, creating major problems for those that are looking to implement digital transformation,” said Cheng Chen, CEO of DataPipeline. “The industry needs a standard to unify the abstraction of messaging systems. We look forward to collaborating with the OpenMessaging project to create an open standard for distributed messaging systems that will not be impacted by the underlying MQ implementation.”&lt;/p&gt;

&lt;p&gt;If you are interested in staying informed on news and updates of this project, join the discussion.&lt;/p&gt;
</description>
        <pubDate>Thu, 06 Sep 2018 00:00:00 +0000</pubDate>
        <link>/news/2018/09/06/Webank-and-DataPipeline-Join-OpenMessaging-to-Build-an-Open-Standard-for-Distributed-Messaging/</link>
        <guid isPermaLink="true">/news/2018/09/06/Webank-and-DataPipeline-Join-OpenMessaging-to-Build-an-Open-Standard-for-Distributed-Messaging/</guid>
        
        
        <category>news</category>
        
      </item>
    
      <item>
        <title>OpenMessaging Domain Architecture</title>
        <description>&lt;p&gt;Above is the v0.3 domain architecture of Open Messaging, see &lt;a href=&quot;/openmessaging-java&quot;&gt;JavaDoc&lt;/a&gt; for details.&lt;/p&gt;

&lt;p&gt;The topic concept has been removed from the model, compared to the first version. And the Stream element has been introduced to this version which is a abstract concept of partition, shard, message group, etc.&lt;/p&gt;

&lt;p&gt;The following sub sections demonstrate these concepts introduced to OMS.&lt;/p&gt;

&lt;h2 id=&quot;namespace&quot;&gt;Namespace&lt;/h2&gt;

&lt;p&gt;Namespace likes a cgroup namespace, to create an isolated space with security guarantee. Each namespace has its own set of producer, consumer, topic, queue and so on. OpenMessaging uses MessagingAccessPoint to access/read/write the resources of a specified Namespace.&lt;/p&gt;

&lt;h2 id=&quot;producer&quot;&gt;Producer&lt;/h2&gt;

&lt;p&gt;OpenMessaging defines two kinds of Producer: Producer and BatchMessageSender.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Producer, provides various send methods to send a message to a specified destination which is a queue in OMS.&lt;/li&gt;
  &lt;li&gt;BatchMessageSender, focuses on speed, the implementation can adopt the batch way, send many messages and then commit at once.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;consumer&quot;&gt;Consumer&lt;/h2&gt;

&lt;p&gt;OpenMessaging defines three kinds of Consumer: PullConsumer, PushConsumer and StreamingConsumer. Each consumer only supports consume messages from the Queue.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;PullConsumer, pulls messages from the specified queue, supports submit the consume result by acknowledgement at any time. One PullConsumer only can pull messages from one fixed queue.&lt;/li&gt;
  &lt;li&gt;PushConsumer, receives messages from multiple queues, these messages are pushed from the MOM server. PushConsumer can attach to multiple queues with separate MessageListener and submit consume result through ReceivedMessageContext at any time.&lt;/li&gt;
  &lt;li&gt;StreamingConsumer, a brand-new consumer type, a stream-oriented consumer, to integrate messaging system with Streaming/BigData related platforms easily. StreamingConsumer supports consume messages from streams of a specified queue like a iterator.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;queue&quot;&gt;Queue&lt;/h2&gt;

&lt;p&gt;Queue is the basic and core concept of OMS, the source of a Queue can be a producer or a routing.&lt;/p&gt;

&lt;p&gt;It is noteworthy that a Queue may be divided into streams, a message will be dispatched to a specified stream by MessageHeader#STREAM_KEY.&lt;/p&gt;

&lt;p&gt;Queue also accepts messages from Producer directly, sometimes, we want to the shortest path from Producer to Consumer, for performance.&lt;/p&gt;

&lt;h2 id=&quot;routing&quot;&gt;Routing&lt;/h2&gt;

&lt;p&gt;The Routing is in charge of processing the original messages in source queue, and routing to another queue. Each Routing is a triple consists of source queue, destination queue and expression. The messages will flow through the expression from source queue and destination queue.&lt;/p&gt;

&lt;p&gt;The expression is used to handle the flowing messages in Routing. There are many kinds of expression, the filter expression is the most commonly used in many scenarios and is the only type defined by this OMS version. In the future, the OMS may support deduplicator exp., joiner exp., rpc exp., and so on.&lt;/p&gt;

&lt;p&gt;What’s more? Routing can cross the network, message can be routed from a network partition to another partition.&lt;/p&gt;
</description>
        <pubDate>Wed, 28 Mar 2018 00:00:00 +0000</pubDate>
        <link>/design/2018/03/28/openmessaging-domain-architecture-v0.3/</link>
        <guid isPermaLink="true">/design/2018/03/28/openmessaging-domain-architecture-v0.3/</guid>
        
        
        <category>design</category>
        
      </item>
    
      <item>
        <title>Helping Enterprises Evaluate Performance of Messaging Solutions</title>
        <description>&lt;p&gt;The acceleration of microservice-based and cloud-based applications has put a growing focus on how data is connected to services, applications and users. This focus has led to a number of new innovations and new products that support messaging and queueing needs. It has also contributed to increased demands on messaging and queuing solutions, making performance and scalability critical to success.&lt;/p&gt;

&lt;p&gt;OpenMessaging was created to ensure that users could confidently choose and deploy the distributed messaging technology that best meets their specific requirements. Since its launch last fall, OpenMessaging has enabled steady progress on the implementation and adoption of open protocols and connectivity for messaging solutions allowing users to adopt messaging solutions without the burden and complexity of incompatibility and proprietary interfaces.&lt;/p&gt;

&lt;p&gt;Earlier this week, we announced the addition of a multi-platform benchmark to OpenMessaging, which adds a valuable new dimension to OpenMessaging. The growing demands on messaging solutions make performance and scalability critically important criteria for choosing messaging technology. However, there are no multi-platform tools based on open standards to aid organizations in assessing performance of messaging and queuing solutions. This benchmark fills the need for a toolkit that makes it easy to measure and compare performance of these solutions.&lt;/p&gt;

&lt;p&gt;The OpenMessaging benchmark is designed to assess performance characteristics that apply to real-world scenarios including end-to-end latency, throughput, and scalability of topics and partitions. It is provided as an open, customizable, and extensible kit giving users the ability to tailor it to help assess performance based on their specific requirements.&lt;/p&gt;

&lt;h2 id=&quot;members-and-community-weigh-in&quot;&gt;Members and Community Weigh In&lt;/h2&gt;

&lt;p&gt;“With the variety of messaging solutions available, including open source solutions such as Apache Kafka, Apache Pulsar, and Apache RocketMQ, the lack of an industry-wide standard for messaging makes evaluating solutions difficult,” said Von Gosling, Alibaba Senior Architect, Apache RocketMQ Co-Creator and PMC member. “To address this, Alibaba and other leading organizations have launched the OpenMessaging project within the Linux Foundation and have designed an OpenMessaging benchmark to compare different messaging systems in many dimensions, including common messaging use cases and transactional scenarios. We hope to see more and more messaging vendors join this open effort to make it the standard for how messaging performance is measured and compared.”&lt;/p&gt;

&lt;p&gt;“Performance and scalability are crucial criteria when choosing a messaging solution, but to date customers have been poorly served when it comes to tools for evaluating their options,” said Matteo Merli, co-founder of Streamlio, a founding member of OpenMessaging. “The new OpenMessaging benchmark provides customers with the tools they need to evaluate and choose the right solution to meet their performance and scalability demands, both now and in the future.”&lt;/p&gt;

&lt;p&gt;This benchmark is another great example of how OpenMessaging is providing users the standard-based tools and solutions they need to confidently select and deploy messaging solutions. As part of the OpenMessaging project, the OpenMessaging community will continue to enhance and extend this benchmark to meet industry needs. For more information and to access the benchmark kit as well as contribute to its future development, you can visit https://github.com/openmessaging/openmessaging-benchmark.&lt;/p&gt;

&lt;p&gt;To learn more about OpenMessaging and to join the OpenMessaging community, visit https://openmessaging.cloud.&lt;/p&gt;

</description>
        <pubDate>Thu, 08 Mar 2018 00:00:00 +0000</pubDate>
        <link>/design/2018/03/08/openmessaging-helping-enterprises-evaluate-performance-of-messaging-solutions/</link>
        <guid isPermaLink="true">/design/2018/03/08/openmessaging-helping-enterprises-evaluate-performance-of-messaging-solutions/</guid>
        
        
        <category>design</category>
        
      </item>
    
      <item>
        <title>OpenMessaging Advances with First Open Performance Benchmark for Messaging</title>
        <description>&lt;p&gt;SAN JOSE, CA. March 6, 2018.  Building on its launch less than six months ago, today the OpenMessaging initiative announced the first open standard, multi-platform performance benchmark for messaging solutions. This extensible benchmark, created through a collaborative effort including Streamlio, Alibaba and the OpenMessaging community, meets the demand for tools to help organizations evaluate the performance of messaging and queuing solutions and demonstrates the continued progress of OpenMessaging in empowering developers and users developing modern data applications.&lt;/p&gt;

&lt;p&gt;OpenMessaging is a collaborative Linux Foundation effort supported by numerous companies including Alibaba, DiDi, Streamlio and Yahoo! who are invested in cloud, big data, and standard APIs. Its mission to create a globally adopted, vendor-neutral, and open standard for distributed messaging that can be deployed in cloud, on-premise, and hybrid use cases.&lt;/p&gt;

&lt;p&gt;Messaging solutions are now a critical component of modern software infrastructure due to the ongoing explosive growth in data sources, data volume, and demands for access to data. This growth has made performance of messaging and queuing solutions critically important. However, to date there have been no multi-platform tools based on open standards to aid organizations in assessing and comparing performance of messaging and queuing solutions.&lt;/p&gt;

&lt;p&gt;To fill this gap, OpenMessaging members Streamlio and Alibaba together with the OpenMessaging community have taken the lead to create a benchmark and supporting tools designed to make it simple to evaluate the performance of messaging and queuing solutions. The benchmark, provided as a kit that can be run, modified, and extended by users, consists of a set of tests that exercise messaging throughput, latency, and scalability in a number of scenarios based on real-world demands. As part of the OpenMessaging project, this benchmark will continue to be enhanced and extended by the OpenMessaging community.&lt;/p&gt;

&lt;p&gt;“Performance and scalabilty are crucial criteria when choosing a messaging solution, but to date customers have been poorly served when it comes to tools for evaluating their options,” said Matteo Merli, co-founder of Streamlio, a founding member of OpenMessaging. “This benchmark, contributed to OpenMessaging by Streamlio and the OpenMessaging community, provides customers with the tools they need to evaluate and choose the right solution to meet their performance and scalability demands both now and in the future.”&lt;/p&gt;

&lt;p&gt;“With the variety of messaging solutions available, including open source solutions such as Apache Kafka, Apache Pulsar, and Apache RocketMQ, the lack of an industry-wide standard for messaging makes evaluating solutions difficult,” said Von Gosling, Alibaba Senior Architect, Apache RocketMQ Co-Creator and PMC member. “To address that, Alibaba and other leading organizations launched the OpenMessaging project within the Linux Standards Foundation, working together to develop a vendor-neutral messaging API and standard. Together we have designed an OpenMessaging benchmark to compare different messaging systems in many dimensions including common messaging use cases and transactional scenarios. We hope to see more and more messaging vendors join this open effort and make contributions to it to make it the standard for how messaging performance is measured and compared.”&lt;/p&gt;

&lt;p&gt;“As more companies and developers move towards data-driven applications, challenges including interoperability issues between platforms and a lack of standard tools for evaluating performance across systems have complicated their efforts,” said Chris Aniszczyk, Vice President, Developer Relations at the Linux Foundation. “The addition of this performance benchmark is another great example of how OpenMessaging is providing users the standards-based tools and solutions they need to confidently select and deploy messaging solutions.”&lt;/p&gt;

&lt;p&gt;To learn more about OpenMessaging and to join the OpenMessaging community, visit &lt;a href=&quot;http://openmessaging.cloud/&quot;&gt;http://openmessaging.cloud/&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Resources:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Streamlio: &lt;a href=&quot;https://streaml.io/&quot;&gt;streaml.io&lt;/a&gt; &lt;br /&gt;
Streamlio Blog:  &lt;a href=&quot;https://streaml.io/blog/open-messaging&quot;&gt;streaml.io/blog/open-messaging&lt;/a&gt;&lt;br /&gt;
Twitter: &lt;a href=&quot;https://twitter.com/streamlio&quot;&gt;twitter.com/streamlio&lt;/a&gt;&lt;br /&gt;
LinkedIn: &lt;a href=&quot;https://linkedin.com/company/streamlio&quot;&gt;linkedin.com/company/streamlio&lt;/a&gt;&lt;br /&gt;
OpenMessaging:  &lt;a href=&quot;http://openmessaging.cloud/&quot;&gt;openmessaging.cloud&lt;/a&gt;&lt;br /&gt;
OpenMessaging Benchmark:  &lt;a href=&quot;https://github.com/openmessaging/openmessaging-benchmark&quot;&gt;github.com/openmessaging/openmessaging-benchmark&lt;/a&gt;&lt;/p&gt;

</description>
        <pubDate>Tue, 06 Mar 2018 00:00:00 +0000</pubDate>
        <link>/news/2018/03/06/openmessaging-advances-with-first-open-performance-benchmark-for-messaging/</link>
        <guid isPermaLink="true">/news/2018/03/06/openmessaging-advances-with-first-open-performance-benchmark-for-messaging/</guid>
        
        
        <category>news</category>
        
      </item>
    
      <item>
        <title>OpenMessaging: Building an Open Standard for Distributed Messaging</title>
        <description>&lt;p&gt;Through a collaborative effort from enterprises and communities invested in cloud, big data, and standard APIs, I’m excited to welcome the OpenMessaging project to The Linux Foundation. The OpenMessaging community’s goal is to create a globally adopted, vendor-neutral, and open standard for distributed messaging that can be deployed in cloud, on-premise, and hybrid use cases.&lt;/p&gt;

&lt;p&gt;Alibaba, Yahoo!, Didi, and Streamlio are the founding project contributors. The Linux Foundation has worked with the initial project community to establish a governance model and structure for the long-term benefit of the ecosystem working on a messaging API standard.&lt;/p&gt;

&lt;p&gt;As more companies and developers move toward cloud native applications, challenges are developing at scale with messaging and streaming applications. These include interoperability issues between platforms, lack of compatibility between wire-level protocols and a lack of standard benchmarking across systems.&lt;/p&gt;

&lt;p&gt;In particular, when data transfers across different messaging and streaming platforms, compatibility problems arise, meaning additional work and maintenance cost. Existing solutions lack standardized guidelines for load balance, fault tolerance, administration, security, and streaming features. Current systems don’t satisfy the needs of modern cloud-oriented messaging and streaming applications. This can lead to redundant work for developers and makes it difficult or impossible to meet cutting-edge business demands around IoT, edge computing, smart cities, and more.&lt;/p&gt;

&lt;p&gt;Contributors to OpenMessaging are looking to improve distributed messaging by:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Creating a global, cloud-oriented, vendor-neutral industry standard for distributed messaging&lt;/li&gt;
  &lt;li&gt;Facilitating a standard benchmark for testing applications&lt;/li&gt;
  &lt;li&gt;Enabling platform independence&lt;/li&gt;
  &lt;li&gt;Targeting cloud data streaming and messaging requirements with scalability, flexibility, isolation, and security built in&lt;/li&gt;
  &lt;li&gt;Fostering a growing community of contributing developers&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can learn more about the new project and how to participate here: http://openmessaging.cloud&lt;/p&gt;

&lt;p&gt;These are some of the organizations supporting OpenMessaging:&lt;/p&gt;

&lt;p&gt;“We have focused on the messaging and streaming field for years, during which we explored Corba notification, JMS and other standards to try to solve our stickiest business requirements. After evaluating the available alternatives, Alibaba chose to create a new cloud-oriented messaging standard, OpenMessaging, which is a vendor-neutral and language-independent and provides industrial guidelines for areas like finance, e-commerce, IoT, and big data. Moreover, it aims to develop messaging and streaming applications across heterogeneous systems and platforms. We hope it can be open, simple, scalable, and interoperable. In addition, we want to build an ecosystem according to this standard, such as benchmark, computation, and various connectors. We would like to have new contributions and hope everyone can work together to push the OpenMessaging standard forward.” &lt;strong&gt;— Von Gosling, senior architect at Alibaba, co-creator of Apache RocketMQ, and original initiator of OpenMessaging&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;“As the sophistication and scale of applications’ messaging needs continue to grow, lack of a standard interface has created complexity and inflexibility barriers for developers and organizations. Streamlio is excited to work with other leaders to launch the OpenMessaging standards initiative in order to give customers easy access to high-performance, low-latency messaging solutions like Apache Pulsar that offer the durability, consistency, and availability that organizations require.” &lt;strong&gt;— Matteo Merli, software engineer at Streamlio, co-creator of Apache Pulsar, and member of Apache BookKeeper PMC&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;“Oath–a Verizon subsidiary of leading media and tech brands including Yahoo and AOL– supports open, collaborative initiatives and is glad to join the OpenMessaging project.” &lt;strong&gt;— Joe Francis, director, Core Platforms&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;“In Didi, we have defined a private set of producer API and consumer API to hide differences among open source MQs such as Apache Kafka, Apache RocketMQ, etc. as well as to provide additional customized features. We are planning to release these to the open source community. So far, we have accumulated a lot of experience on MQs and API unification, and are willing to work in OpenMessaging to construct a common standard of APIs together with others. We sincerely believe that a unified and widely accepted API standard can benefit MQ technology and applications that rely on it.” &lt;strong&gt;— Neil Qi, architect at Didi&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;“There are many different open source messaging solutions, including Apache ActiveMQ, Apache RocketMQ, Apache Pulsar, and Apache Kafka. The lack of an industry-wide, scalable messaging standard makes evaluating a suitable solution difficult. We are excited to support the joint effort from multiple open source projects working together to define a scalable, open messaging specification. Apache BookKeeper has been successfully deployed in production at Yahoo (via Apache Pulsar) and Twitter (via Apache DistributedLog) as their durable, high-performance, low-latency storage foundation for their enterprise-grade messaging systems. We are excited to join the OpenMessaging effort to help other projects address common problems like low-latency durability, consistency and availability in messaging solutions.” &lt;strong&gt;— Sijie Guo, co-founder of Streamlio, PMC chair of Apache BookKeeper, and co-creator of Apache DistributedLog&lt;/strong&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;News Source: &lt;a href=&quot;https://www.linuxfoundation.org/blog/building-open-standard-distributed-messaging-introducing-openmessaging/&quot;&gt;Building an Open Standard for Distributed Messaging: Introducing OpenMessaging&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 10 Oct 2017 00:00:00 +0000</pubDate>
        <link>/news/2017/10/10/openMessaging-launches-with-linux-foundation/</link>
        <guid isPermaLink="true">/news/2017/10/10/openMessaging-launches-with-linux-foundation/</guid>
        
        
        <category>news</category>
        
      </item>
    
      <item>
        <title>Linux Foundation Launches OpenMessaging Project</title>
        <description>&lt;p&gt;The roster of Linux Foundation Collaborative Project is growing again, this time with the launch of OpenMessaging project.&lt;/p&gt;

&lt;p&gt;According to the project’s GitHub projec page, the goal of the effort is to provide a vendor-neutral open standard for distributed messaging and stream.&lt;/p&gt;

&lt;p&gt;“OpenMessaging, which includes the establishment of industry guidelines and messaging, streaming specifications to provide a common framework for finance, e-commerce, IoT and big-data area,” the project states. “The design principles are the cloud-oriented, simplicity, flexibility, and language independent in distributed heterogeneous environments.&lt;/p&gt;

&lt;p&gt;There are many different messaging standards and protocols in use today, but when it cam time for Chinese internet giant Alibaba to figure out how to enable messaging across its platform, existing solutions didn’t quite fit the bill.&lt;/p&gt;

&lt;p&gt;Von Gosling, senior architect at Alibaba, co-creator of Apache RocketMQ, and original initiator of OpenMessaging stated that Alibaba has been working in the messaging and streaming field for years and explored Corba notifications, JMS and other standards to try to solve business requirements.&lt;/p&gt;

&lt;p&gt;“After evaluating the available alternatives, Alibaba chose to create a new cloud-oriented messaging standard, OpenMessaging, which is a vendor-neutral and language-independent and provides industrial guidelines for areas like finance, e-commerce, IoT, and big data,” Von Gosling stated. “Moreover, it aims to develop messaging and streaming applications across heterogeneous systems and platforms.”&lt;/p&gt;

&lt;p&gt;Von Gosling added that with the OpenMessaging Project at the Linux Foundation the hope is build an open, simple, scalable, and interoperable platform that benefits from contributions. Among the vendors that is joining OpenMessaging is Verizon’s Oath business unit which includes the operations of AOL and Yahoo. Coincidentally, Oath recently announced that it was discontinuing its consumer AOL Instant Messenger (AIM) platform.&lt;/p&gt;

&lt;p&gt;“Oath–a Verizon subsidiary of leading media and tech brands including Yahoo and AOL– supports open, collaborative initiatives and is glad to join the OpenMessaging project.” — Joe Francis, director, Core Platforms at Oath stated.&lt;/p&gt;

&lt;p&gt;OpenMessaging is still a very early effort with the current domain architecture at the 0.1 alpha milestone release.&lt;/p&gt;

&lt;p&gt;News Source: &lt;a href=&quot;http://www.enterprisenetworkingplanet.com/unified_communications/linux-foundation-launches-openmessaging-project.html/&quot;&gt;Linux Foundation Launches OpenMessaging Project&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 09 Oct 2017 00:00:00 +0000</pubDate>
        <link>/news/2017/10/09/linux-foundation-launches-openMessaging-project/</link>
        <guid isPermaLink="true">/news/2017/10/09/linux-foundation-launches-openMessaging-project/</guid>
        
        
        <category>news</category>
        
      </item>
    
  </channel>
</rss>
